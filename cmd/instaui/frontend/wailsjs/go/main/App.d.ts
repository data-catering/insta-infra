// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {container} from '../models';
import {models} from '../models';

export function AttemptStartRuntime(arg1:string):Promise<container.StartupResult>;

export function CheckImageExists(arg1:string):Promise<boolean>;

export function CheckMultipleImagesExist(arg1:Array<string>):Promise<Record<string, boolean>>;

export function CheckStartingServicesProgress():Promise<Record<string, models.ServiceStatus>>;

export function GetAllDependencyStatuses():Promise<Record<string, models.ServiceStatus>>;

export function GetAllRunningServices():Promise<Record<string, models.ServiceStatus>>;

export function GetAllServiceDetails():Promise<Array<models.ServiceDetailInfo>>;

export function GetAllServicesWithStatusAndDependencies():Promise<Array<models.ServiceDetailInfo>>;

export function GetAppLogs():Promise<Array<string>>;

export function GetCurrentRuntime():Promise<string>;

export function GetCustomDockerPath():Promise<string>;

export function GetCustomPodmanPath():Promise<string>;

export function GetImageInfo(arg1:string):Promise<string>;

export function GetImagePullProgress(arg1:string):Promise<models.ImagePullProgress>;

export function GetMultipleImageInfo(arg1:Array<string>):Promise<Record<string, string>>;

export function GetMultipleServiceStatuses(arg1:Array<string>):Promise<Record<string, models.ServiceStatus>>;

export function GetRuntimeStatus():Promise<container.SystemRuntimeStatus>;

export function GetServiceConnectionInfo(arg1:string):Promise<models.ServiceConnectionInfo>;

export function GetServiceLogs(arg1:string,arg2:number):Promise<Array<string>>;

export function GetServiceStatus(arg1:string):Promise<string>;

export function ListServices():Promise<Array<models.ServiceInfo>>;

export function OpenServiceInBrowser(arg1:string):Promise<void>;

export function RefreshStatusFromContainers():Promise<Record<string, models.ServiceStatus>>;

export function ReinitializeRuntime():Promise<void>;

export function SetCustomDockerPath(arg1:string):Promise<void>;

export function SetCustomPodmanPath(arg1:string):Promise<void>;

export function StartImagePull(arg1:string):Promise<void>;

export function StartLogStream(arg1:string):Promise<void>;

export function StartService(arg1:string,arg2:boolean):Promise<void>;

export function StartServiceWithStatusUpdate(arg1:string,arg2:boolean):Promise<Record<string, models.ServiceStatus>>;

export function StopAllServices():Promise<void>;

export function StopAllServicesWithStatusUpdate():Promise<Record<string, models.ServiceStatus>>;

export function StopImagePull(arg1:string):Promise<void>;

export function StopLogStream(arg1:string):Promise<void>;

export function StopService(arg1:string):Promise<void>;

export function StopServiceWithStatusUpdate(arg1:string):Promise<Record<string, models.ServiceStatus>>;

export function WaitForRuntimeReady(arg1:string,arg2:number):Promise<container.StartupResult>;
