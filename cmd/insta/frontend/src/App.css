#app {
    height: 100vh;
    text-align: center;
}

#logo {
    display: block;
    width: 50%;
    height: 50%;
    margin: auto;
    padding: 10% 0 0;
    background-position: center;
    background-repeat: no-repeat;
    background-size: 100% 100%;
    background-origin: content-box;
}

.result {
    height: 20px;
    line-height: 20px;
    margin: 1.5rem auto;
}

.input-box .btn {
    width: 60px;
    height: 30px;
    line-height: 30px;
    border-radius: 3px;
    border: none;
    margin: 0 0 0 20px;
    padding: 0 8px;
    cursor: pointer;
}

.input-box .btn:hover {
    background-image: linear-gradient(to top, #cfd9df 0%, #e2ebf0 100%);
    color: #333333;
}

.input-box .input {
    border: none;
    border-radius: 3px;
    outline: none;
    height: 30px;
    line-height: 30px;
    padding: 0 10px;
    background-color: rgba(240, 240, 240, 1);
    -webkit-font-smoothing: antialiased;
}

.input-box .input:hover {
    border: none;
    background-color: rgba(255, 255, 255, 1);
}

.input-box .input:focus {
    border: none;
    background-color: rgba(255, 255, 255, 1);
}

/* Pulse animation for status indicators */
@keyframes pulse-fast {
    0%, 100% {
        opacity: 1;
        transform: scale(1);
    }
    50% {
        opacity: .7;
        transform: scale(1.05);
    }
}

.animate-pulse-fast {
    animation: pulse-fast 1s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* Floating animation for cards and alert states */
@keyframes float {
    0% {
        transform: translateY(0px);
    }
    50% {
        transform: translateY(-5px);
    }
    100% {
        transform: translateY(0px);
    }
}

.animate-float {
    animation: float 3s ease-in-out infinite;
}

/* Shimmer loading effect */
@keyframes shimmer {
    0% {
        background-position: -1000px 0;
    }
    100% {
        background-position: 1000px 0;
    }
}

.animate-shimmer {
    animation: shimmer 2s infinite linear;
    background: linear-gradient(to right, rgba(255, 255, 255, 0.03) 8%, rgba(255, 255, 255, 0.08) 18%, rgba(255, 255, 255, 0.03) 33%);
    background-size: 1000px 100%;
}

/* Reveal animation for content appearance */
@keyframes reveal {
    0% {
        opacity: 0;
        transform: translateY(10px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

.animate-reveal {
    animation: reveal 0.5s ease-out forwards;
}

/* Blur in effect */
@keyframes blur-in {
    0% {
        opacity: 0;
        filter: blur(10px);
    }
    100% {
        opacity: 1;
        filter: blur(0);
    }
}

.animate-blur-in {
    animation: blur-in 0.4s ease-out forwards;
}

/* Glass morphism effect */
.glassmorphism {
    background: rgba(15, 23, 42, 0.75); /* Tailwind slate-900 with opacity */
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 4px 20px 0 rgba(0, 0, 0, 0.15);
}

/* Glow effects for highlighted elements */
.glow {
    box-shadow: 0 0 15px rgba(59, 130, 246, 0.5);
    transition: box-shadow 0.3s ease;
}

.glow:hover {
    box-shadow: 0 0 20px rgba(59, 130, 246, 0.7);
}

.glow-green {
    box-shadow: 0 0 15px rgba(16, 185, 129, 0.5);
    transition: box-shadow 0.3s ease;
}

.glow-green:hover {
    box-shadow: 0 0 20px rgba(16, 185, 129, 0.7);
}

.glow-red {
    box-shadow: 0 0 15px rgba(239, 68, 68, 0.5);
    transition: box-shadow 0.3s ease;
}

.glow-red:hover {
    box-shadow: 0 0 20px rgba(239, 68, 68, 0.7);
}

/* Custom scrollbar */
::-webkit-scrollbar {
    width: 6px;
    height: 6px;
}

::-webkit-scrollbar-track {
    background: rgba(15, 23, 42, 0.7);
}

::-webkit-scrollbar-thumb {
    background: rgba(75, 85, 99, 0.7);
    border-radius: 3px;
    transition: background 0.2s ease;
}

::-webkit-scrollbar-thumb:hover {
    background: rgba(107, 114, 128, 0.8);
}

/* Card hover effects */
.hover-card-effect {
    transition: all 0.3s ease;
    transform: translateZ(0); /* Force hardware acceleration */
}

.hover-card-effect:hover {
    transform: translateY(-3px) translateZ(0);
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.3);
}

/* Button press effect */
.button-press {
    transition: transform 0.1s ease;
}

.button-press:active {
    transform: scale(0.97);
}

/* Fade effects */
.hover-fade {
    transition: opacity 0.2s ease;
}

.hover-fade:hover {
    opacity: 0.8;
}

/* Animated gradient background */
@keyframes gradient-shift {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

.animate-gradient {
    background: linear-gradient(-45deg, #0f172a, #1e293b, #0f172a, #1e1b4b);
    background-size: 400% 400%;
    animation: gradient-shift 15s ease infinite;
}

/* Interactive element effects */

/* Ripple effect for buttons */
.ripple {
    position: relative;
    overflow: hidden;
}

.ripple:after {
    content: "";
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    pointer-events: none;
    background-image: radial-gradient(circle, #fff 10%, transparent 10.01%);
    background-repeat: no-repeat;
    background-position: 50%;
    transform: scale(10, 10);
    opacity: 0;
    transition: transform 0.5s, opacity 0.5s;
}

.ripple:active:after {
    transform: scale(0, 0);
    opacity: 0.3;
    transition: 0s;
}

/* Add text highlight effect */
.text-highlight {
    position: relative;
    display: inline-block;
}

.text-highlight:after {
    content: '';
    position: absolute;
    width: 100%;
    height: 0.2em;
    bottom: 0;
    left: 0;
    background-color: rgba(59, 130, 246, 0.3);
    transform: scaleX(0);
    transform-origin: bottom right;
    transition: transform 0.3s ease;
}

.text-highlight:hover:after {
    transform: scaleX(1);
    transform-origin: bottom left;
}

/* Scale effect for card expansion */
.scale-102 {
    transform: scale(1.02);
}

/* Circular progress indicator */
.circular-progress {
    transform: rotate(-90deg);
    transform-origin: 50% 50%;
}

/* Glassy card effect with frosted-glass hover effect */
.glass-card {
    background: rgba(15, 23, 42, 0.6);
    backdrop-filter: blur(5px);
    transition: backdrop-filter 0.3s ease, background 0.3s ease;
}

.glass-card:hover {
    backdrop-filter: blur(8px);
    background: rgba(15, 23, 42, 0.7);
}

/* Avatar glow effect */
.avatar-glow {
    position: relative;
}

.avatar-glow:after {
    content: '';
    position: absolute;
    top: -3px;
    left: -3px;
    right: -3px;
    bottom: -3px;
    border-radius: 50%;
    background: radial-gradient(circle, rgba(59, 130, 246, 0.7) 0%, rgba(59, 130, 246, 0) 70%);
    z-index: -1;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.avatar-glow:hover:after {
    opacity: 1;
}

/* Bouncing dot animation for loading states */
@keyframes bounce-loader {
    0%, 80%, 100% { 
        transform: scale(0);
    } 
    40% { 
        transform: scale(1.0);
    }
}

.bouncing-loader > div {
    width: 10px;
    height: 10px;
    margin: 0 3px;
    background-color: rgba(99, 102, 241, 0.6);
    border-radius: 50%;
    display: inline-block;
    animation: bounce-loader 1.4s infinite ease-in-out both;
}

.bouncing-loader > div:nth-child(1) {
    animation-delay: -0.32s;
}

.bouncing-loader > div:nth-child(2) {
    animation-delay: -0.16s;
}

/* Type-specific colors for service cards */
.service-type-database { 
    background: linear-gradient(135deg, rgba(37, 99, 235, 0.1) 0%, rgba(124, 58, 237, 0.1) 100%);
    border-color: rgba(37, 99, 235, 0.3);
}

.service-type-messaging { 
    background: linear-gradient(135deg, rgba(234, 179, 8, 0.1) 0%, rgba(249, 115, 22, 0.1) 100%);
    border-color: rgba(234, 179, 8, 0.3);
}

.service-type-monitoring { 
    background: linear-gradient(135deg, rgba(20, 184, 166, 0.1) 0%, rgba(6, 182, 212, 0.1) 100%);
    border-color: rgba(20, 184, 166, 0.3);
}

.service-type-visualization { 
    background: linear-gradient(135deg, rgba(168, 85, 247, 0.1) 0%, rgba(236, 72, 153, 0.1) 100%);
    border-color: rgba(168, 85, 247, 0.3);
}

/* Status-specific styles */
.status-running {
    background: linear-gradient(135deg, rgba(16, 185, 129, 0.1) 0%, rgba(5, 150, 105, 0.1) 100%);
    border-color: rgba(16, 185, 129, 0.3);
}

.status-error {
    background: linear-gradient(135deg, rgba(239, 68, 68, 0.1) 0%, rgba(220, 38, 38, 0.1) 100%);
    border-color: rgba(239, 68, 68, 0.3);
}

.status-stopped {
    background: linear-gradient(135deg, rgba(75, 85, 99, 0.1) 0%, rgba(55, 65, 81, 0.1) 100%);
    border-color: rgba(75, 85, 99, 0.3);
}

/* Animated checkmark for success states */
@keyframes checkmark {
    0% {
        stroke-dashoffset: 100;
    }
    100% {
        stroke-dashoffset: 0;
    }
}

.animate-checkmark {
    stroke-dasharray: 100;
    animation: checkmark 1s ease-in-out forwards;
}

/* Micro-interactions */
.hover-scale {
    transition: transform 0.2s ease;
}

.hover-scale:hover {
    transform: scale(1.05);
}

.hover-rotate {
    transition: transform 0.3s ease;
}

.hover-rotate:hover {
    transform: rotate(5deg);
}

/* Ensure Tailwind base styles are applied if not already part of a global setup */
/* You might have this in a main.css or index.css imported at the root of your app */
/* @tailwind base; */
/* @tailwind components; */
/* @tailwind utilities; */

/* Dependency failure UI styles */
.dependency-failure-reason {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-top: 0.25rem;
    padding: 0.375rem 0.5rem;
    background: rgba(239, 68, 68, 0.1);
    border: 1px solid rgba(239, 68, 68, 0.2);
    border-radius: 0.375rem;
    font-size: 0.75rem;
}

.dependency-failure-reason .failure-text {
    color: #fca5a5;
    font-weight: 500;
}

.dependency-logs-button {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    padding: 0.25rem 0.5rem;
    background: rgba(59, 130, 246, 0.1);
    border: 1px solid rgba(59, 130, 246, 0.3);
    border-radius: 0.25rem;
    color: #93c5fd;
    font-size: 0.75rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
}

.dependency-logs-button:hover {
    background: rgba(59, 130, 246, 0.2);
    border-color: rgba(59, 130, 246, 0.5);
    color: #dbeafe;
    transform: translateY(-1px);
}



/* Enhanced dependency status badges */
.status-badge.completed {
    background: rgba(16, 185, 129, 0.2);
    color: #6ee7b7;
    border: 1px solid rgba(16, 185, 129, 0.3);
}

.status-badge.failed {
    background: rgba(239, 68, 68, 0.2);
    color: #fca5a5;
    border: 1px solid rgba(239, 68, 68, 0.3);
}

/* Improved dependency item layout */
.dependency-item {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    padding: 0.75rem;
    border-radius: 0.5rem;
    border: 1px solid rgba(75, 85, 99, 0.3);
    background: rgba(15, 23, 42, 0.4);
    margin-bottom: 0.5rem;
    transition: all 0.2s ease;
}

.dependency-item:hover {
    border-color: rgba(99, 102, 241, 0.4);
    background: rgba(15, 23, 42, 0.6);
}

.dependency-item.error,
.dependency-item.failed {
    border-color: rgba(239, 68, 68, 0.4);
    background: rgba(239, 68, 68, 0.05);
}

.dependency-item.running {
    border-color: rgba(16, 185, 129, 0.4);
    background: rgba(16, 185, 129, 0.05);
}

.dependency-item.completed {
    border-color: rgba(16, 185, 129, 0.4);
    background: rgba(16, 185, 129, 0.05);
}

.dependency-info {
    flex: 1;
    min-width: 0;
}

.dependency-status-badges {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    flex-shrink: 0;
}

/* LogsModal dependency context styles */
.dependency-context {
    font-size: 0.875rem;
    color: #94a3b8;
    font-weight: normal;
}

.failure-context {
    display: flex;
    align-items: center;
    gap: 0.375rem;
    margin-top: 0.25rem;
    padding: 0.25rem 0.5rem;
    background: rgba(239, 68, 68, 0.1);
    border-radius: 0.25rem;
    color: #fca5a5;
    font-size: 0.75rem;
    border: 1px solid rgba(239, 68, 68, 0.2);
}